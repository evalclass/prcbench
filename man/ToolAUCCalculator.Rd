% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz.R
\docType{class}
\name{ToolAUCCalculator}
\alias{ToolAUCCalculator}
\title{AUCCalculator wrapper class}
\format{\code{R6}}
\usage{
ToolAUCCalculator$new()
}
\description{
\code{ToolAUCCalculator} is a wrapper class for
\href{http://mark.goadrich.com/programs/AUC/}{AUCCalculator}, which is a Java
library that provides calculatoins of ROC and Precision-Recall curves. It
is generated by a generator function as
\code{tool_generator("AUCCalculator")}.
}
\section{Inheritance}{

\code{\link{ToolBase}}
}

\section{Methods}{


\describe{
  \item{\code{set_java_call(type, fpath = NULL)}}{
    It sets an AUCCalculator jar file.

    \describe{
      \item{\code{type}}{A string to specify the wrapper method. It must be
                         either "syscall" or "rjava". It uses a system call
                         and \code{\link[rJava]{.jcall}} of the \code{rJava}
                         library, respectively.}
      \item{\code{fpath}}{File path of the AUCCalculator jar file,
                          e.g. \code{"/path1/path2/auc.jar"}.}
    }
  }
}

Following five methods are interited from \code{\link{ToolBase}}. See
\code{\link{ToolBase}} for the method descriptions.
\itemize{
  \item \code{call(sdat, retval = TRUE, auc = TRUE)}
  \item \code{get_result()}
  \item \code{get_x()}
  \item \code{get_y()}
  \item \code{get_auc()}
}
}
\examples{
## An object needs to be instantiated from the class
## before calling any wrapper functions
toolauccalc1 <- ToolAUCCalculator$new()

## tool_generator can also be used to create a wrapper object
toolauccalc2 <- tool_generator("AUCCalculator")$new()

}
\keyword{data}

